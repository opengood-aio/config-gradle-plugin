package io.opengood.gradle.constant

class Dependencies {
    companion object {
        const val APACHE_ARTEMIS = "org.apache.activemq:artemis-project"
        const val APACHE_COMMONS_COMPRESS = "org.apache.commons:commons-compress"
        const val ASSERTJ = "assertj.core"
        const val ASSERTJ_CORE = "org.assertj:assertj-core"
        const val GROOVY = "org.codehaus.groovy:groovy-all"
        const val JACKSON_ANNOTATIONS = "com.fasterxml.jackson.core:jackson-annotations"
        const val JACKSON_MODULE_KOTLIN = "com.fasterxml.jackson.module:jackson-module-kotlin"
        const val JAVA = "java"
        const val JUNIT_JUPITER = "junit.jupiter"
        const val JUNIT_JUPITER_ALL = "org.junit.jupiter:junit-jupiter"
        const val KOTEST = "kotest"
        const val KOTEST_ASSERTIONS = "io.kotest:kotest-assertions-core"
        const val KOTEST_EXTENSIONS = "io.kotest:kotest-extensions-junit5"
        const val KOTEST_PROPERTIES = "io.kotest:kotest-property"
        const val KOTEST_RUNNER = "io.kotest:kotest-runner-junit5"
        const val KOTEST_SPRING = "kotest.extensions.spring"
        const val KOTEST_SPRING_EXTENSIONS = "io.kotest.extensions:kotest-extensions-spring"
        const val KOTLIN = "kotlin"
        const val KOTLIN_COROUTINES = "kotlinx.coroutines"
        const val KOTLIN_COROUTINES_CORE = "org.jetbrains.kotlinx:kotlinx-coroutines-core"
        const val KOTLIN_REFLECT = "org.jetbrains.kotlin:kotlin-reflect"
        const val KOTLIN_STD_LIB = "org.jetbrains.kotlin:kotlin-stdlib"
        const val KOTLIN_TEST = "org.jetbrains.kotlin:kotlin-test"
        const val LOMBOK = "org.projectlombok:lombok"
        const val MOCKITO = "mockito"
        const val MOCKITO_CORE = "org.mockito:mockito-core"
        const val MOCKITO_JUNIT_JUPITER = "org.mockito:mockito-junit-jupiter"
        const val MOCKK = "mockk"
        const val MOCKK_ALL = "io.mockk:mockk"
        const val SNAKE_YAML = "org.yaml:snakeyaml"
        const val SPRING_BOOT_CONFIG_PROCESSOR = "org.springframework.boot:spring-boot-configuration-processor"
        const val SPRING_BOOT_STARTER = "org.springframework.boot:spring-boot-starter"
        const val SPRING_BOOT_STARTER_TEST = "org.springframework.boot:spring-boot-starter-test"
        const val SPRING_MOCKK = "com.ninja-squad:springmockk"
        const val TEST = "io.opengood:test"
    }
}
